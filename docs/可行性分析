博客网站
可行性分析报告
3.21.2018
胡杭 李成辉 钟阮杰
目录
博客网站	1
可行性分析报告	1
目录	1
1.	问题定义	1
2.	候选解决方案	1
3.	可行性分析	2
（1）技术可行性分析	2
（2）经济可行性分析	2
（3）操作可行性分析	2
（4）社会可行性分析	2
4.	开发计划	2
（1）资源需求	2
（2）进度计划	2
5.	风险分析	2

1.问题定义
博客，英文名为Blogger,它的正式名称为网络日记。是使用特定的软件，在网络上出版、发表和张贴个人文章的人，或者是一种通常由个人管理、不定期张贴新的文章的网站。 博客上的文章通常以网员形式出现，并根据张贴时间，以倒序排列。博客是继MSN.BBS.ICQ之后出现的第4种网络交流方式，现已受到大家的欢迎，是以超级链接为武器的网络日记，它代表着新的生活、工作和学习方式。一个典型的博客结合了文字、图像、其他博客或网站的链接及其它与主题相关的媒体，能够让读者以互动的方式留下意见，是许多博客的重要要素。大部分的博客内容以文字为主，仍有一些博客专注在艺术、摄影、视频、音乐、播客等各种主题。
2.候选解决方案
根据问题，初步导出一个或多个可能的解决方案，用系统流程图辅助描述。
3.可行性分析
从以下角度分析各种候选方案的可行性：
（1）技术可行性分析
使用现有的技术能否实现？
（2）经济可行性分析
对每种方案作成本效益分析。
（3）操作可行性分析
操作上是否能被用户所接受？
（4）社会可行性分析
分析和评估对社会、健康、安全、法律以及文化的影响（不一定包括全部）。
分析和评估对环境的影响。
4.开发计划
（1）资源需求
在开发博客网系统时，需要具备下面的软件环境。
服务器端：
操作系统：windows xp
Web服务器：tomcat 6.0
Java开发包：jdk1.5以上
数据库：SQL Server2000
浏览器：IE6.0
客户端：
浏览器：IE6.0
（2）进度计划
对项目开发的进度做一个粗略的计划（各个时间点及完成的任务）。
1.制定网站规划方案，包括网站预期目标、网站栏目结构、用户行为分析及内容规划、网页末班设计、网站服务器技术、网站运营维护等基本内容；               3.21.2018
2.网站技术开发、网页设计；                                           4.21.2018
3.网站测试；                                                         4.22.2018
4.网站发布和推广；
5.网站维护及管理
6.网站设计对不同浏览器具有兼容性
5.风险分析
1．易受到SQL注入攻击
风险：攻击者可以通过应用程序发送数据库命令，这些命令将被服务器执行。这可以用来对数据库进行完全控制。这些SQL注入漏洞可以通过在其中一个区域插入“and 7 = 7 -”或“and 8 = 9 -”，并比较结果进行判断。
改善：在程序中所有可接受外部参数的地方进行逐一识别，以过滤危险字符。如在全局函数中定义“禁止字符串列表”，该表中列出所要过滤出的SQL攻击代码可能包含的字符串。
and |exec |insert |select |delete |update |count | * |chr |mid |master |truncate |char |declare |<|>|’|(|)|{|}
2．易受到跨站点脚本攻击
风险：此漏洞可以被用来获取身份验证Cookie，攻击管理员账户，或使应用程序的用户攻击其他服务器和系统。该漏洞可以通过在某区域中插入“<script>alert(‘23389950’);</script>”来判断。
分析：这也需要在本网站的所有输入域实施服务器端白名单技术。如果需要特殊字符，应该转换为更安全的形式。如适用于各种语言的HTML转码：
&应转换为 &；
“应转换为”；
‘应转换为&39；
>应转换为>；
<应转换为<。
改善：除了这些标准的HTML转码之外，对于可疑字符串也要进行强化 检查和转化，并进一步执行以下操作：（1）对各页面的输入参数进行强化检查；（2）对原来只在客户端判断的参数，在服务器端进一步强化检查;（3）最终提 供了全局的转码和过滤的函数。当然这需要在性能和扩展性以及安全性方面的平衡综合考虑。
3．非安全的CrossDomain.XML文件
风险：为解决Flash/Flex系统中的跨域问题，提出了 crossdomain.xml跨域策略文件。虽然可以解决跨域问题，但是也带来了恶意攻击的风险，如果该策略文件里允许访问任何域，就可能允许发起对网 络服务器的跨站点请求伪造和跨站点脚本攻击。比如，不安全Flash应用程序可能会访问本地数据和用户保存的网页记录，甚至传播病毒和恶意代码。
改善：经过调查，发现在程序目录下的crossdomain.xml文件里的配置如下：
<?xml version=”1.0″?>
<!DOCTYPE cross-domain-policy SYSTEM ”http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd”>
<cross-domain-policy>
<allow-access-from domain=”*” />
</cross-domain-policy>
文件中的allow-access-from 实体设置为星号设置为允许任何域访问，将其修改为 <allow-access-from domain=”*.example.com” />，表示只允许本域访问，该问题就解决了。
4．Flash参数AllowScript-Access 已设置为always
风险：当AllowScriptAccess为always时，表明嵌入的第三方Flash文件可以执行代码。攻击者此时就可以利用该缺陷嵌入任意第三方Flash文件而执行恶意
代码。
5.泄露敏感信息
风险：此信息只能用于协助利用其他漏洞，并不能直接用来破坏应用程序。网站的robots.txt文件里可以获得敏感目录的信息，这可能允许攻击者获得有关应用程序内部的其他信息，这些信息可能被用来攻击其他漏洞。
改善：当然robots.txt要根据SEO的要求来处理，但也要同样注意安全 性。如：disallow:/testadmin/，其中testadmin为管理后台，就被暴露了。可以根据实际情况是否必要决定删除 robots.txt文件或者把敏感目录单独配置禁止搜索引擎搜索
6.可能通过登录页面枚举出用户名，因为根据账户是否存在的错误信息是不同的。
对策：修改错误信息使之不带有提示性，如“您输入的邮箱或密码不对!” 并且超过一定次数则对该IP进行锁定。
7.检测到可能泄露敏感信息或被恶意利用的冗余文件，如测试文件、bak文件、临时文件。
对策：除去服务器中的相应文件。
8．发现潜在机密信息，如名为order的文件很容易被联想到用户订单。
对策：避免在文件名中含有完整的敏感词汇或不要在容易猜测到的文件中保存敏感信息，或者限制对它们的访问。
9.发现内部信息泄露。
对策：除去代码中漏删的内部IP地址，内部组织，人员相关信息等。


